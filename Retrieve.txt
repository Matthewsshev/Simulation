passanger_value=['p_0']
    trafficlights = traci.trafficlight.getIDList()
    for i in range(0, len(passanger_value)):

        # Function descriptions
        # https://sumo.dlr.de/docs/TraCI/Vehicle_Value_Retrieval.html
        # https://sumo.dlr.de/pydoc/traci._vehicle.html#VehicleDomain-getSpeed
        vehid = passanger_value[i]
        x, y = traci.person.getPosition(passanger_value[i])
        last_x, last_y = x, y
        displacement = ((x - last_x) ** 2 + (y - last_y) ** 2) ** 0.5
            # Store current position for the next step

        coord = [x, y]
        lon, lat = traci.simulation.convertGeo(x, y)
        gpscoord = [lon, lat]
        spd = round(traci.person.getSpeed(passanger_value[i]) * 3.6, 2)
        edge = traci.person.getRoadID(passanger_value[i])
        lane = traci.person.getLaneID(passanger_value[i])
        #displacement = round(traci.person.getDistance(passanger_value[i]), 2)
        turnAngle = round(traci.person.getAngle(passanger_value[i]), 2)
        #nextTLS = traci.person.getNextTLS(passanger_value[i])
        vehList = [getdatetime(), vehid, coord, gpscoord, spd, edge, lane, displacement, turnAngle] #, nextTLS]
        print("Vehicle: ", passanger_value[i], " at datetime: ", getdatetime())
        print(passanger_value[i], " >>> Position: ", coord, " | GPS Position: ", gpscoord, " |", \
              " Speed: ", round(traci.person.getSpeed(passanger_value[i]) * 3.6, 2), "km/h |", \
              # Returns the id of the edge the named vehicle was at within the last step.
              " EdgeID of veh: ", traci.person.getRoadID(passanger_value[i]), " |", \
              # Returns the id of the lane the named vehicle was at within the last step.
              " LaneID of veh: ", traci.person.getLaneID(passanger_value[i]), " |", \
              # Returns the distance to the starting point like an odometer.
              #" Distance: ", round(traci.person.getDistance(passanger_value[i]), 2), "m |", \
              # Returns the angle in degrees of the named vehicle within the last step.
              " Vehicle orientation: ", round(traci.person.getAngle(passanger_value[i]), 2), "deg |", \
              )